<?php

/**
 * TimetableWeek
 *
 * PHP version 5
 *
 * @category Class
 * @package  Paqtcom\Simplicate
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Simplicate API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * Contact: support@simplicate.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Paqtcom\Simplicate\Model;

use ArrayAccess;
use Paqtcom\Simplicate\ObjectSerializer;

/**
 * TimetableWeek Class Doc Comment
 *
 * @category Class
 * @package  Paqtcom\Simplicate
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TimetableWeek implements ModelInterface, ArrayAccess, \Stringable
{
    public const DISCRIMINATOR = null;

    /**
     * The original name of the model.
     */
    protected static string $swaggerModelName = 'TimetableWeek';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $swaggerTypes = [
        'day_1' => \Paqtcom\Simplicate\Model\TimetableWeekDay::class,
        'day_2' => \Paqtcom\Simplicate\Model\TimetableWeekDay::class,
        'day_3' => \Paqtcom\Simplicate\Model\TimetableWeekDay::class,
        'day_4' => \Paqtcom\Simplicate\Model\TimetableWeekDay::class,
        'day_5' => \Paqtcom\Simplicate\Model\TimetableWeekDay::class,
        'day_6' => \Paqtcom\Simplicate\Model\TimetableWeekDay::class,
        'day_7' => \Paqtcom\Simplicate\Model\TimetableWeekDay::class,
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $swaggerFormats = [
        'day_1' => null,
        'day_2' => null,
        'day_3' => null,
        'day_4' => null,
        'day_5' => null,
        'day_6' => null,
        'day_7' => null,
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'day_1' => 'day_1',
        'day_2' => 'day_2',
        'day_3' => 'day_3',
        'day_4' => 'day_4',
        'day_5' => 'day_5',
        'day_6' => 'day_6',
        'day_7' => 'day_7',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'day_1' => 'setDay1',
        'day_2' => 'setDay2',
        'day_3' => 'setDay3',
        'day_4' => 'setDay4',
        'day_5' => 'setDay5',
        'day_6' => 'setDay6',
        'day_7' => 'setDay7',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'day_1' => 'getDay1',
        'day_2' => 'getDay2',
        'day_3' => 'getDay3',
        'day_4' => 'getDay4',
        'day_5' => 'getDay5',
        'day_6' => 'getDay6',
        'day_7' => 'getDay7',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected array $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['day_1'] = $data['day_1'] ?? null;
        $this->container['day_2'] = $data['day_2'] ?? null;
        $this->container['day_3'] = $data['day_3'] ?? null;
        $this->container['day_4'] = $data['day_4'] ?? null;
        $this->container['day_5'] = $data['day_5'] ?? null;
        $this->container['day_6'] = $data['day_6'] ?? null;
        $this->container['day_7'] = $data['day_7'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        return [];
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets day_1
     *
     * @return \Paqtcom\Simplicate\Model\TimetableWeekDay
     */
    public function getDay1()
    {
        return $this->container['day_1'];
    }

    /**
     * Sets day_1
     *
     * @param \Paqtcom\Simplicate\Model\TimetableWeekDay $day_1 day_1
     *
     * @return $this
     */
    public function setDay1($day_1)
    {
        $this->container['day_1'] = $day_1;

        return $this;
    }

    /**
     * Gets day_2
     *
     * @return \Paqtcom\Simplicate\Model\TimetableWeekDay
     */
    public function getDay2()
    {
        return $this->container['day_2'];
    }

    /**
     * Sets day_2
     *
     * @param \Paqtcom\Simplicate\Model\TimetableWeekDay $day_2 day_2
     *
     * @return $this
     */
    public function setDay2($day_2)
    {
        $this->container['day_2'] = $day_2;

        return $this;
    }

    /**
     * Gets day_3
     *
     * @return \Paqtcom\Simplicate\Model\TimetableWeekDay
     */
    public function getDay3()
    {
        return $this->container['day_3'];
    }

    /**
     * Sets day_3
     *
     * @param \Paqtcom\Simplicate\Model\TimetableWeekDay $day_3 day_3
     *
     * @return $this
     */
    public function setDay3($day_3)
    {
        $this->container['day_3'] = $day_3;

        return $this;
    }

    /**
     * Gets day_4
     *
     * @return \Paqtcom\Simplicate\Model\TimetableWeekDay
     */
    public function getDay4()
    {
        return $this->container['day_4'];
    }

    /**
     * Sets day_4
     *
     * @param \Paqtcom\Simplicate\Model\TimetableWeekDay $day_4 day_4
     *
     * @return $this
     */
    public function setDay4($day_4)
    {
        $this->container['day_4'] = $day_4;

        return $this;
    }

    /**
     * Gets day_5
     *
     * @return \Paqtcom\Simplicate\Model\TimetableWeekDay
     */
    public function getDay5()
    {
        return $this->container['day_5'];
    }

    /**
     * Sets day_5
     *
     * @param \Paqtcom\Simplicate\Model\TimetableWeekDay $day_5 day_5
     *
     * @return $this
     */
    public function setDay5($day_5)
    {
        $this->container['day_5'] = $day_5;

        return $this;
    }

    /**
     * Gets day_6
     *
     * @return \Paqtcom\Simplicate\Model\TimetableWeekDay
     */
    public function getDay6()
    {
        return $this->container['day_6'];
    }

    /**
     * Sets day_6
     *
     * @param \Paqtcom\Simplicate\Model\TimetableWeekDay $day_6 day_6
     *
     * @return $this
     */
    public function setDay6($day_6)
    {
        $this->container['day_6'] = $day_6;

        return $this;
    }

    /**
     * Gets day_7
     *
     * @return \Paqtcom\Simplicate\Model\TimetableWeekDay
     */
    public function getDay7()
    {
        return $this->container['day_7'];
    }

    /**
     * Sets day_7
     *
     * @param \Paqtcom\Simplicate\Model\TimetableWeekDay $day_7 day_7
     *
     * @return $this
     */
    public function setDay7($day_7)
    {
        $this->container['day_7'] = $day_7;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     */
    public function __toString(): string
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return (string) json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return (string) json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
