<?php

/**
 * GetSales
 *
 * PHP version 5
 *
 * @category Class
 * @package  Paqtcom\Simplicate
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Simplicate API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * Contact: support@simplicate.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Paqtcom\Simplicate\Model;

use ArrayAccess;
use Paqtcom\Simplicate\ObjectSerializer;

/**
 * GetSales Class Doc Comment
 *
 * @category Class
 * @package  Paqtcom\Simplicate
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GetSales implements ModelInterface, ArrayAccess
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $swaggerModelName = 'GetSales';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $swaggerTypes = [
        'id' => 'string',
        'responsible_employee' => '\Paqtcom\Simplicate\Model\GetEmployeeSimple',
        'person' => '\Paqtcom\Simplicate\Model\GetPersonSimple',
        'organization' => '\Paqtcom\Simplicate\Model\GetOrganizationSimple',
        'progress' => '\Paqtcom\Simplicate\Model\SalesProgress',
        'source' => '\Paqtcom\Simplicate\Model\SalesSource',
        'status' => '\Paqtcom\Simplicate\Model\SalesStatus',
        'separate_invoice_recipient' => '\Paqtcom\Simplicate\Model\GetSeparateInvoiceRecipient',
        'teams' => '\Paqtcom\Simplicate\Model\GetTeamSimple[]',
        'custom_fields' => '\Paqtcom\Simplicate\Model\GetCustomField[]',
        'created_at' => 'string',
        'updated_at' => 'string',
        'status_updated_at' => 'string',
        'simplicate_url' => 'string',
        'linked_project' => '\Paqtcom\Simplicate\Model\GetProjectSimple',
        'my_organization_profile_id' => 'string',
        'organization_id' => 'string',
        'person_id' => 'string',
        'contact_id' => 'string',
        'reason' => '\Paqtcom\Simplicate\Model\SalesReason',
        'contact' => '\Paqtcom\Simplicate\Model\ContactPerson',
        'subject' => 'string',
        'start_date' => 'string',
        'expected_closing_date' => 'string',
        'expected_revenue' => 'float',
        'note' => 'string',
        'chance_to_score' => 'int',
        'lost_to_competitor' => '\Paqtcom\Simplicate\Model\LostToCompetitor',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $swaggerFormats = [
        'id' => null,
        'responsible_employee' => null,
        'person' => null,
        'organization' => null,
        'progress' => null,
        'source' => null,
        'status' => null,
        'separate_invoice_recipient' => null,
        'teams' => null,
        'custom_fields' => null,
        'created_at' => null,
        'updated_at' => null,
        'status_updated_at' => null,
        'simplicate_url' => null,
        'linked_project' => null,
        'my_organization_profile_id' => null,
        'organization_id' => null,
        'person_id' => null,
        'contact_id' => null,
        'reason' => null,
        'contact' => null,
        'subject' => null,
        'start_date' => null,
        'expected_closing_date' => null,
        'expected_revenue' => 'float',
        'note' => null,
        'chance_to_score' => null,
        'lost_to_competitor' => null,
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'id' => 'id',
        'responsible_employee' => 'responsible_employee',
        'person' => 'person',
        'organization' => 'organization',
        'progress' => 'progress',
        'source' => 'source',
        'status' => 'status',
        'separate_invoice_recipient' => 'separate_invoice_recipient',
        'teams' => 'teams',
        'custom_fields' => 'custom_fields',
        'created_at' => 'created_at',
        'updated_at' => 'updated_at',
        'status_updated_at' => 'status_updated_at',
        'simplicate_url' => 'simplicate_url',
        'linked_project' => 'linked_project',
        'my_organization_profile_id' => 'my_organization_profile_id',
        'organization_id' => 'organization_id',
        'person_id' => 'person_id',
        'contact_id' => 'contact_id',
        'reason' => 'reason',
        'contact' => 'contact',
        'subject' => 'subject',
        'start_date' => 'start_date',
        'expected_closing_date' => 'expected_closing_date',
        'expected_revenue' => 'expected_revenue',
        'note' => 'note',
        'chance_to_score' => 'chance_to_score',
        'lost_to_competitor' => 'lost_to_competitor',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'id' => 'setId',
        'responsible_employee' => 'setResponsibleEmployee',
        'person' => 'setPerson',
        'organization' => 'setOrganization',
        'progress' => 'setProgress',
        'source' => 'setSource',
        'status' => 'setStatus',
        'separate_invoice_recipient' => 'setSeparateInvoiceRecipient',
        'teams' => 'setTeams',
        'custom_fields' => 'setCustomFields',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt',
        'status_updated_at' => 'setStatusUpdatedAt',
        'simplicate_url' => 'setSimplicateUrl',
        'linked_project' => 'setLinkedProject',
        'my_organization_profile_id' => 'setMyOrganizationProfileId',
        'organization_id' => 'setOrganizationId',
        'person_id' => 'setPersonId',
        'contact_id' => 'setContactId',
        'reason' => 'setReason',
        'contact' => 'setContact',
        'subject' => 'setSubject',
        'start_date' => 'setStartDate',
        'expected_closing_date' => 'setExpectedClosingDate',
        'expected_revenue' => 'setExpectedRevenue',
        'note' => 'setNote',
        'chance_to_score' => 'setChanceToScore',
        'lost_to_competitor' => 'setLostToCompetitor',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'id' => 'getId',
        'responsible_employee' => 'getResponsibleEmployee',
        'person' => 'getPerson',
        'organization' => 'getOrganization',
        'progress' => 'getProgress',
        'source' => 'getSource',
        'status' => 'getStatus',
        'separate_invoice_recipient' => 'getSeparateInvoiceRecipient',
        'teams' => 'getTeams',
        'custom_fields' => 'getCustomFields',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt',
        'status_updated_at' => 'getStatusUpdatedAt',
        'simplicate_url' => 'getSimplicateUrl',
        'linked_project' => 'getLinkedProject',
        'my_organization_profile_id' => 'getMyOrganizationProfileId',
        'organization_id' => 'getOrganizationId',
        'person_id' => 'getPersonId',
        'contact_id' => 'getContactId',
        'reason' => 'getReason',
        'contact' => 'getContact',
        'subject' => 'getSubject',
        'start_date' => 'getStartDate',
        'expected_closing_date' => 'getExpectedClosingDate',
        'expected_revenue' => 'getExpectedRevenue',
        'note' => 'getNote',
        'chance_to_score' => 'getChanceToScore',
        'lost_to_competitor' => 'getLostToCompetitor',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected array $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['responsible_employee'] = isset($data['responsible_employee']) ? $data['responsible_employee'] : null;
        $this->container['person'] = isset($data['person']) ? $data['person'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['progress'] = isset($data['progress']) ? $data['progress'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['separate_invoice_recipient'] = isset($data['separate_invoice_recipient']) ? $data['separate_invoice_recipient'] : null;
        $this->container['teams'] = isset($data['teams']) ? $data['teams'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['status_updated_at'] = isset($data['status_updated_at']) ? $data['status_updated_at'] : null;
        $this->container['simplicate_url'] = isset($data['simplicate_url']) ? $data['simplicate_url'] : null;
        $this->container['linked_project'] = isset($data['linked_project']) ? $data['linked_project'] : null;
        $this->container['my_organization_profile_id'] = isset($data['my_organization_profile_id']) ? $data['my_organization_profile_id'] : null;
        $this->container['organization_id'] = isset($data['organization_id']) ? $data['organization_id'] : null;
        $this->container['person_id'] = isset($data['person_id']) ? $data['person_id'] : null;
        $this->container['contact_id'] = isset($data['contact_id']) ? $data['contact_id'] : null;
        $this->container['reason'] = isset($data['reason']) ? $data['reason'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['subject'] = isset($data['subject']) ? $data['subject'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['expected_closing_date'] = isset($data['expected_closing_date']) ? $data['expected_closing_date'] : null;
        $this->container['expected_revenue'] = isset($data['expected_revenue']) ? $data['expected_revenue'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['chance_to_score'] = isset($data['chance_to_score']) ? $data['chance_to_score'] : null;
        $this->container['lost_to_competitor'] = isset($data['lost_to_competitor']) ? $data['lost_to_competitor'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets responsible_employee
     *
     * @return \Paqtcom\Simplicate\Model\GetEmployeeSimple
     */
    public function getResponsibleEmployee()
    {
        return $this->container['responsible_employee'];
    }

    /**
     * Sets responsible_employee
     *
     * @param \Paqtcom\Simplicate\Model\GetEmployeeSimple $responsible_employee responsible_employee
     *
     * @return $this
     */
    public function setResponsibleEmployee($responsible_employee)
    {
        $this->container['responsible_employee'] = $responsible_employee;

        return $this;
    }

    /**
     * Gets person
     *
     * @return \Paqtcom\Simplicate\Model\GetPersonSimple
     */
    public function getPerson()
    {
        return $this->container['person'];
    }

    /**
     * Sets person
     *
     * @param \Paqtcom\Simplicate\Model\GetPersonSimple $person person
     *
     * @return $this
     */
    public function setPerson($person)
    {
        $this->container['person'] = $person;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return \Paqtcom\Simplicate\Model\GetOrganizationSimple
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param \Paqtcom\Simplicate\Model\GetOrganizationSimple $organization organization
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets progress
     *
     * @return \Paqtcom\Simplicate\Model\SalesProgress
     */
    public function getProgress()
    {
        return $this->container['progress'];
    }

    /**
     * Sets progress
     *
     * @param \Paqtcom\Simplicate\Model\SalesProgress $progress progress
     *
     * @return $this
     */
    public function setProgress($progress)
    {
        $this->container['progress'] = $progress;

        return $this;
    }

    /**
     * Gets source
     *
     * @return \Paqtcom\Simplicate\Model\SalesSource
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param \Paqtcom\Simplicate\Model\SalesSource $source source
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Paqtcom\Simplicate\Model\SalesStatus
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Paqtcom\Simplicate\Model\SalesStatus $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets separate_invoice_recipient
     *
     * @return \Paqtcom\Simplicate\Model\GetSeparateInvoiceRecipient
     */
    public function getSeparateInvoiceRecipient()
    {
        return $this->container['separate_invoice_recipient'];
    }

    /**
     * Sets separate_invoice_recipient
     *
     * @param \Paqtcom\Simplicate\Model\GetSeparateInvoiceRecipient $separate_invoice_recipient separate_invoice_recipient
     *
     * @return $this
     */
    public function setSeparateInvoiceRecipient($separate_invoice_recipient)
    {
        $this->container['separate_invoice_recipient'] = $separate_invoice_recipient;

        return $this;
    }

    /**
     * Gets teams
     *
     * @return \Paqtcom\Simplicate\Model\GetTeamSimple[]
     */
    public function getTeams()
    {
        return $this->container['teams'];
    }

    /**
     * Sets teams
     *
     * @param \Paqtcom\Simplicate\Model\GetTeamSimple[] $teams teams
     *
     * @return $this
     */
    public function setTeams($teams)
    {
        $this->container['teams'] = $teams;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return \Paqtcom\Simplicate\Model\GetCustomField[]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param \Paqtcom\Simplicate\Model\GetCustomField[] $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param string $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets status_updated_at
     *
     * @return string
     */
    public function getStatusUpdatedAt()
    {
        return $this->container['status_updated_at'];
    }

    /**
     * Sets status_updated_at
     *
     * @param string $status_updated_at status_updated_at
     *
     * @return $this
     */
    public function setStatusUpdatedAt($status_updated_at)
    {
        $this->container['status_updated_at'] = $status_updated_at;

        return $this;
    }

    /**
     * Gets simplicate_url
     *
     * @return string
     */
    public function getSimplicateUrl()
    {
        return $this->container['simplicate_url'];
    }

    /**
     * Sets simplicate_url
     *
     * @param string $simplicate_url simplicate_url
     *
     * @return $this
     */
    public function setSimplicateUrl($simplicate_url)
    {
        $this->container['simplicate_url'] = $simplicate_url;

        return $this;
    }

    /**
     * Gets linked_project
     *
     * @return \Paqtcom\Simplicate\Model\GetProjectSimple
     */
    public function getLinkedProject()
    {
        return $this->container['linked_project'];
    }

    /**
     * Sets linked_project
     *
     * @param \Paqtcom\Simplicate\Model\GetProjectSimple $linked_project linked_project
     *
     * @return $this
     */
    public function setLinkedProject($linked_project)
    {
        $this->container['linked_project'] = $linked_project;

        return $this;
    }

    /**
     * Gets my_organization_profile_id
     *
     * @return string
     */
    public function getMyOrganizationProfileId()
    {
        return $this->container['my_organization_profile_id'];
    }

    /**
     * Sets my_organization_profile_id
     *
     * @param string $my_organization_profile_id my_organization_profile_id
     *
     * @return $this
     */
    public function setMyOrganizationProfileId($my_organization_profile_id)
    {
        $this->container['my_organization_profile_id'] = $my_organization_profile_id;

        return $this;
    }

    /**
     * Gets organization_id
     *
     * @return string
     */
    public function getOrganizationId()
    {
        return $this->container['organization_id'];
    }

    /**
     * Sets organization_id
     *
     * @param string $organization_id organization_id
     *
     * @return $this
     */
    public function setOrganizationId($organization_id)
    {
        $this->container['organization_id'] = $organization_id;

        return $this;
    }

    /**
     * Gets person_id
     *
     * @return string
     */
    public function getPersonId()
    {
        return $this->container['person_id'];
    }

    /**
     * Sets person_id
     *
     * @param string $person_id person_id
     *
     * @return $this
     */
    public function setPersonId($person_id)
    {
        $this->container['person_id'] = $person_id;

        return $this;
    }

    /**
     * Gets contact_id
     *
     * @return string
     */
    public function getContactId()
    {
        return $this->container['contact_id'];
    }

    /**
     * Sets contact_id
     *
     * @param string $contact_id contact_id
     *
     * @return $this
     */
    public function setContactId($contact_id)
    {
        $this->container['contact_id'] = $contact_id;

        return $this;
    }

    /**
     * Gets reason
     *
     * @return \Paqtcom\Simplicate\Model\SalesReason
     */
    public function getReason()
    {
        return $this->container['reason'];
    }

    /**
     * Sets reason
     *
     * @param \Paqtcom\Simplicate\Model\SalesReason $reason reason
     *
     * @return $this
     */
    public function setReason($reason)
    {
        $this->container['reason'] = $reason;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return \Paqtcom\Simplicate\Model\ContactPerson
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param \Paqtcom\Simplicate\Model\ContactPerson $contact contact
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets subject
     *
     * @return string
     */
    public function getSubject()
    {
        return $this->container['subject'];
    }

    /**
     * Sets subject
     *
     * @param string $subject subject
     *
     * @return $this
     */
    public function setSubject($subject)
    {
        $this->container['subject'] = $subject;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return string
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param string $start_date start_date
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets expected_closing_date
     *
     * @return string
     */
    public function getExpectedClosingDate()
    {
        return $this->container['expected_closing_date'];
    }

    /**
     * Sets expected_closing_date
     *
     * @param string $expected_closing_date expected_closing_date
     *
     * @return $this
     */
    public function setExpectedClosingDate($expected_closing_date)
    {
        $this->container['expected_closing_date'] = $expected_closing_date;

        return $this;
    }

    /**
     * Gets expected_revenue
     *
     * @return float
     */
    public function getExpectedRevenue()
    {
        return $this->container['expected_revenue'];
    }

    /**
     * Sets expected_revenue
     *
     * @param float $expected_revenue expected_revenue
     *
     * @return $this
     */
    public function setExpectedRevenue($expected_revenue)
    {
        $this->container['expected_revenue'] = $expected_revenue;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note note
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets chance_to_score
     *
     * @return int
     */
    public function getChanceToScore()
    {
        return $this->container['chance_to_score'];
    }

    /**
     * Sets chance_to_score
     *
     * @param int $chance_to_score chance_to_score
     *
     * @return $this
     */
    public function setChanceToScore($chance_to_score)
    {
        $this->container['chance_to_score'] = $chance_to_score;

        return $this;
    }

    /**
     * Gets lost_to_competitor
     *
     * @return \Paqtcom\Simplicate\Model\LostToCompetitor
     */
    public function getLostToCompetitor()
    {
        return $this->container['lost_to_competitor'];
    }

    /**
     * Sets lost_to_competitor
     *
     * @param \Paqtcom\Simplicate\Model\LostToCompetitor $lost_to_competitor lost_to_competitor
     *
     * @return $this
     */
    public function setLostToCompetitor($lost_to_competitor)
    {
        $this->container['lost_to_competitor'] = $lost_to_competitor;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
