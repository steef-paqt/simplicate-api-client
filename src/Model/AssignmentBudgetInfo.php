<?php

/**
 * AssignmentBudgetInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  Paqtcom\Simplicate
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Simplicate API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * Contact: support@simplicate.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Paqtcom\Simplicate\Model;

use ArrayAccess;
use Paqtcom\Simplicate\ObjectSerializer;

/**
 * AssignmentBudgetInfo Class Doc Comment
 *
 * @category Class
 * @package  Paqtcom\Simplicate
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AssignmentBudgetInfo implements ModelInterface, ArrayAccess
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $swaggerModelName = 'AssignmentBudgetInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $swaggerTypes = [
        'id' => 'string',
        'assignments_planned' => '\Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast',
        'assignments_unplanned' => 'string',
        'assignments_hours_written' => '\Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast',
        'itemtypes_hours_written' => '\Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast',
        'assignments_hours_corrections' => '\Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast',
        'itemtypes_hours_corrections' => '\Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast',
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $swaggerFormats = [
        'id' => null,
        'assignments_planned' => null,
        'assignments_unplanned' => null,
        'assignments_hours_written' => null,
        'itemtypes_hours_written' => null,
        'assignments_hours_corrections' => null,
        'itemtypes_hours_corrections' => null,
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'id' => 'id',
        'assignments_planned' => 'assignmentsPlanned',
        'assignments_unplanned' => 'assignmentsUnplanned',
        'assignments_hours_written' => 'assignmentsHoursWritten',
        'itemtypes_hours_written' => 'itemtypesHoursWritten',
        'assignments_hours_corrections' => 'assignmentsHoursCorrections',
        'itemtypes_hours_corrections' => 'itemtypesHoursCorrections',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'id' => 'setId',
        'assignments_planned' => 'setAssignmentsPlanned',
        'assignments_unplanned' => 'setAssignmentsUnplanned',
        'assignments_hours_written' => 'setAssignmentsHoursWritten',
        'itemtypes_hours_written' => 'setItemtypesHoursWritten',
        'assignments_hours_corrections' => 'setAssignmentsHoursCorrections',
        'itemtypes_hours_corrections' => 'setItemtypesHoursCorrections',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'id' => 'getId',
        'assignments_planned' => 'getAssignmentsPlanned',
        'assignments_unplanned' => 'getAssignmentsUnplanned',
        'assignments_hours_written' => 'getAssignmentsHoursWritten',
        'itemtypes_hours_written' => 'getItemtypesHoursWritten',
        'assignments_hours_corrections' => 'getAssignmentsHoursCorrections',
        'itemtypes_hours_corrections' => 'getItemtypesHoursCorrections',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected array $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : 'assignmentbudget:abc';
        $this->container['assignments_planned'] = isset($data['assignments_planned']) ? $data['assignments_planned'] : null;
        $this->container['assignments_unplanned'] = isset($data['assignments_unplanned']) ? $data['assignments_unplanned'] : 'PT28H45M';
        $this->container['assignments_hours_written'] = isset($data['assignments_hours_written']) ? $data['assignments_hours_written'] : null;
        $this->container['itemtypes_hours_written'] = isset($data['itemtypes_hours_written']) ? $data['itemtypes_hours_written'] : null;
        $this->container['assignments_hours_corrections'] = isset($data['assignments_hours_corrections']) ? $data['assignments_hours_corrections'] : null;
        $this->container['itemtypes_hours_corrections'] = isset($data['itemtypes_hours_corrections']) ? $data['itemtypes_hours_corrections'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets assignments_planned
     *
     * @return \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast
     */
    public function getAssignmentsPlanned()
    {
        return $this->container['assignments_planned'];
    }

    /**
     * Sets assignments_planned
     *
     * @param \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast $assignments_planned assignments_planned
     *
     * @return $this
     */
    public function setAssignmentsPlanned($assignments_planned)
    {
        $this->container['assignments_planned'] = $assignments_planned;

        return $this;
    }

    /**
     * Gets assignments_unplanned
     *
     * @return string
     */
    public function getAssignmentsUnplanned()
    {
        return $this->container['assignments_unplanned'];
    }

    /**
     * Sets assignments_unplanned
     *
     * @param string $assignments_unplanned assignments_unplanned
     *
     * @return $this
     */
    public function setAssignmentsUnplanned($assignments_unplanned)
    {
        $this->container['assignments_unplanned'] = $assignments_unplanned;

        return $this;
    }

    /**
     * Gets assignments_hours_written
     *
     * @return \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast
     */
    public function getAssignmentsHoursWritten()
    {
        return $this->container['assignments_hours_written'];
    }

    /**
     * Sets assignments_hours_written
     *
     * @param \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast $assignments_hours_written assignments_hours_written
     *
     * @return $this
     */
    public function setAssignmentsHoursWritten($assignments_hours_written)
    {
        $this->container['assignments_hours_written'] = $assignments_hours_written;

        return $this;
    }

    /**
     * Gets itemtypes_hours_written
     *
     * @return \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast
     */
    public function getItemtypesHoursWritten()
    {
        return $this->container['itemtypes_hours_written'];
    }

    /**
     * Sets itemtypes_hours_written
     *
     * @param \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast $itemtypes_hours_written itemtypes_hours_written
     *
     * @return $this
     */
    public function setItemtypesHoursWritten($itemtypes_hours_written)
    {
        $this->container['itemtypes_hours_written'] = $itemtypes_hours_written;

        return $this;
    }

    /**
     * Gets assignments_hours_corrections
     *
     * @return \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast
     */
    public function getAssignmentsHoursCorrections()
    {
        return $this->container['assignments_hours_corrections'];
    }

    /**
     * Sets assignments_hours_corrections
     *
     * @param \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast $assignments_hours_corrections assignments_hours_corrections
     *
     * @return $this
     */
    public function setAssignmentsHoursCorrections($assignments_hours_corrections)
    {
        $this->container['assignments_hours_corrections'] = $assignments_hours_corrections;

        return $this;
    }

    /**
     * Gets itemtypes_hours_corrections
     *
     * @return \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast
     */
    public function getItemtypesHoursCorrections()
    {
        return $this->container['itemtypes_hours_corrections'];
    }

    /**
     * Sets itemtypes_hours_corrections
     *
     * @param \Paqtcom\Simplicate\Model\AssignmentBudgetInfoFuturePast $itemtypes_hours_corrections itemtypes_hours_corrections
     *
     * @return $this
     */
    public function setItemtypesHoursCorrections($itemtypes_hours_corrections)
    {
        $this->container['itemtypes_hours_corrections'] = $itemtypes_hours_corrections;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
