<?php
/**
 * SalesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Simplicate API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * Contact: support@simplicate.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * SalesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SalesApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for salesConverttoprojectIdGet
     *
     * Shows if the provided sale id can be converted to a project.
     *
     */
    public function testSalesConverttoprojectIdGet()
    {
    }

    /**
     * Test case for salesDocumentGet
     *
     * Fetches all available documents for sales.
     *
     */
    public function testSalesDocumentGet()
    {
    }

    /**
     * Test case for salesDocumentIdDelete
     *
     * Deletes the document with the given id.
     *
     */
    public function testSalesDocumentIdDelete()
    {
    }

    /**
     * Test case for salesDocumentIdGet
     *
     * Fetches a single document for sales by its id.
     *
     */
    public function testSalesDocumentIdGet()
    {
    }

    /**
     * Test case for salesDocumentPost
     *
     * create a document.
     *
     */
    public function testSalesDocumentPost()
    {
    }

    /**
     * Test case for salesDocumentPut
     *
     * update a document.
     *
     */
    public function testSalesDocumentPut()
    {
    }

    /**
     * Test case for salesDocumenttypeGet
     *
     * Fetches all available document types for Sales.
     *
     */
    public function testSalesDocumenttypeGet()
    {
    }

    /**
     * Test case for salesDocumenttypeIdGet
     *
     * Fetches a single document type for Sales by its id.
     *
     */
    public function testSalesDocumenttypeIdGet()
    {
    }

    /**
     * Test case for salesQuoteGet
     *
     * Fetches all available quote templates for sales.
     *
     */
    public function testSalesQuoteGet()
    {
    }

    /**
     * Test case for salesQuoteIdDelete
     *
     * Deletes the quote template with the given id.
     *
     */
    public function testSalesQuoteIdDelete()
    {
    }

    /**
     * Test case for salesQuoteIdGet
     *
     * Fetches a single quote template for sales by its id.
     *
     */
    public function testSalesQuoteIdGet()
    {
    }

    /**
     * Test case for salesQuoteIdPut
     *
     * update a quote template.
     *
     */
    public function testSalesQuoteIdPut()
    {
    }

    /**
     * Test case for salesQuotePost
     *
     * create a quote template.
     *
     */
    public function testSalesQuotePost()
    {
    }

    /**
     * Test case for salesQuoteemailIdPut
     *
     * append only a single email to the emails collection quote.
     *
     */
    public function testSalesQuoteemailIdPut()
    {
    }

    /**
     * Test case for salesQuotestatusGet
     *
     * Fetches all quote statuses.
     *
     */
    public function testSalesQuotestatusGet()
    {
    }

    /**
     * Test case for salesQuotestatusIdGet
     *
     * Fetches a single quote status for quotes by its id.
     *
     */
    public function testSalesQuotestatusIdGet()
    {
    }

    /**
     * Test case for salesQuotetemplateGet
     *
     * Fetches all available quote templates for sales.
     *
     */
    public function testSalesQuotetemplateGet()
    {
    }

    /**
     * Test case for salesQuotetemplateIdDelete
     *
     * Deletes the quote template with the given id.
     *
     */
    public function testSalesQuotetemplateIdDelete()
    {
    }

    /**
     * Test case for salesQuotetemplateIdGet
     *
     * Fetches a single quote template for sales by its id.
     *
     */
    public function testSalesQuotetemplateIdGet()
    {
    }

    /**
     * Test case for salesQuotetemplateIdPut
     *
     * update a quote template.
     *
     */
    public function testSalesQuotetemplateIdPut()
    {
    }

    /**
     * Test case for salesQuotetemplatePost
     *
     * create a quote template.
     *
     */
    public function testSalesQuotetemplatePost()
    {
    }

    /**
     * Test case for salesRevenuegroupGet
     *
     * Fetches all revenue groups.
     *
     */
    public function testSalesRevenuegroupGet()
    {
    }

    /**
     * Test case for salesRevenuegroupIdGet
     *
     * Fetches a single revenue group by id.
     *
     */
    public function testSalesRevenuegroupIdGet()
    {
    }

    /**
     * Test case for salesSalesGet
     *
     * Fetches all sales.
     *
     */
    public function testSalesSalesGet()
    {
    }

    /**
     * Test case for salesSalesIdDuplicatePost
     *
     * Duplicates a sales deal on base of the id.
     *
     */
    public function testSalesSalesIdDuplicatePost()
    {
    }

    /**
     * Test case for salesSalesIdGet
     *
     * Fetches a single sales by id.
     *
     */
    public function testSalesSalesIdGet()
    {
    }

    /**
     * Test case for salesSalesIdPut
     *
     * Updates a sales for the given id.
     *
     */
    public function testSalesSalesIdPut()
    {
    }

    /**
     * Test case for salesSalesPost
     *
     * Add a new sales.
     *
     */
    public function testSalesSalesPost()
    {
    }

    /**
     * Test case for salesSalescustomfieldgroupsGet
     *
     * Fetches all custom field groups available for sales.
     *
     */
    public function testSalesSalescustomfieldgroupsGet()
    {
    }

    /**
     * Test case for salesSalescustomfieldgroupsIdGet
     *
     * Fetches a single custom field group available for project.
     *
     */
    public function testSalesSalescustomfieldgroupsIdGet()
    {
    }

    /**
     * Test case for salesSalescustomfieldsGet
     *
     * Fetches all custom fields available for sales.
     *
     */
    public function testSalesSalescustomfieldsGet()
    {
    }

    /**
     * Test case for salesSalescustomfieldsIdGet
     *
     * Fetches a single custom field available for sales.
     *
     */
    public function testSalesSalescustomfieldsIdGet()
    {
    }

    /**
     * Test case for salesSalesfiltersGet
     *
     * Fetches all filters available for sales.
     *
     */
    public function testSalesSalesfiltersGet()
    {
    }

    /**
     * Test case for salesSalesfiltersIdGet
     *
     * Fetches a single filter available for sales.
     *
     */
    public function testSalesSalesfiltersIdGet()
    {
    }

    /**
     * Test case for salesSalesprogressGet
     *
     * Fetches all sales progresses.
     *
     */
    public function testSalesSalesprogressGet()
    {
    }

    /**
     * Test case for salesSalesprogressIdGet
     *
     * Fetches a single sales progress by id.
     *
     */
    public function testSalesSalesprogressIdGet()
    {
    }

    /**
     * Test case for salesSalesreasonGet
     *
     * Fetches all sales reasons.
     *
     */
    public function testSalesSalesreasonGet()
    {
    }

    /**
     * Test case for salesSalesreasonIdGet
     *
     * Fetches a single sales reason by id.
     *
     */
    public function testSalesSalesreasonIdGet()
    {
    }

    /**
     * Test case for salesSalessourceGet
     *
     * Fetches all sales source.
     *
     */
    public function testSalesSalessourceGet()
    {
    }

    /**
     * Test case for salesSalessourceIdGet
     *
     * Fetches a single sales source by id.
     *
     */
    public function testSalesSalessourceIdGet()
    {
    }

    /**
     * Test case for salesSalesstatusGet
     *
     * Fetches all sales statusses.
     *
     */
    public function testSalesSalesstatusGet()
    {
    }

    /**
     * Test case for salesSalesstatusIdGet
     *
     * Fetches a single sales status by id.
     *
     */
    public function testSalesSalesstatusIdGet()
    {
    }

    /**
     * Test case for salesServiceGet
     *
     * Fetches all services.
     *
     */
    public function testSalesServiceGet()
    {
    }

    /**
     * Test case for salesServiceIdDelete
     *
     * Deletes the service with the given id.
     *
     */
    public function testSalesServiceIdDelete()
    {
    }

    /**
     * Test case for salesServiceIdDuplicatePost
     *
     * Duplicates a service on base of the id.
     *
     */
    public function testSalesServiceIdDuplicatePost()
    {
    }

    /**
     * Test case for salesServiceIdGet
     *
     * Fetches a single service by id.
     *
     */
    public function testSalesServiceIdGet()
    {
    }

    /**
     * Test case for salesServiceIdPut
     *
     * Updates a service for the given id.
     *
     */
    public function testSalesServiceIdPut()
    {
    }

    /**
     * Test case for salesServicePost
     *
     * Add a new service.
     *
     */
    public function testSalesServicePost()
    {
    }
}
