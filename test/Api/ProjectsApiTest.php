<?php
/**
 * ProjectsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Simplicate API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * Contact: support@simplicate.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * ProjectsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProjectsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for projectsAssignmentGet
     *
     * Fetches all available assignments for projects.
     *
     */
    public function testProjectsAssignmentGet()
    {
    }

    /**
     * Test case for projectsAssignmentIdGet
     *
     * Fetches all a single assignment by its id.
     *
     */
    public function testProjectsAssignmentIdGet()
    {
    }

    /**
     * Test case for projectsAssignmentIdPut
     *
     * Updates a project assignment for the given id.
     *
     */
    public function testProjectsAssignmentIdPut()
    {
    }

    /**
     * Test case for projectsAssignmentPost
     *
     * Creates a new project assignment.
     *
     */
    public function testProjectsAssignmentPost()
    {
    }

    /**
     * Test case for projectsAssignmentbudgetGet
     *
     * Get budget information (planned amount, spent amount etc.) of assignment within given date range.
     *
     */
    public function testProjectsAssignmentbudgetGet()
    {
    }

    /**
     * Test case for projectsAssignmentstatusGet
     *
     * Fetches all available assignment statuses for projects.
     *
     */
    public function testProjectsAssignmentstatusGet()
    {
    }

    /**
     * Test case for projectsAssignmentstatusIdGet
     *
     * Fetches a single assignment status by its id.
     *
     */
    public function testProjectsAssignmentstatusIdGet()
    {
    }

    /**
     * Test case for projectsAssignmentstatusIdPut
     *
     * Updates a project assignment status for the given id.
     *
     */
    public function testProjectsAssignmentstatusIdPut()
    {
    }

    /**
     * Test case for projectsAssignmentstatusPost
     *
     * Creates a new project assignment status.
     *
     */
    public function testProjectsAssignmentstatusPost()
    {
    }

    /**
     * Test case for projectsDocumentGet
     *
     * Fetches all available documents for projects.
     *
     */
    public function testProjectsDocumentGet()
    {
    }

    /**
     * Test case for projectsDocumentIdDelete
     *
     * Deletes the document with the given id.
     *
     */
    public function testProjectsDocumentIdDelete()
    {
    }

    /**
     * Test case for projectsDocumentIdGet
     *
     * Fetches a single document for projects by its id.
     *
     */
    public function testProjectsDocumentIdGet()
    {
    }

    /**
     * Test case for projectsDocumentPost
     *
     * create a document.
     *
     */
    public function testProjectsDocumentPost()
    {
    }

    /**
     * Test case for projectsDocumentPut
     *
     * update a document.
     *
     */
    public function testProjectsDocumentPut()
    {
    }

    /**
     * Test case for projectsDocumenttypeGet
     *
     * Fetches all available document types for Projects.
     *
     */
    public function testProjectsDocumenttypeGet()
    {
    }

    /**
     * Test case for projectsDocumenttypeIdGet
     *
     * Fetches a single document type for Projects by its id.
     *
     */
    public function testProjectsDocumenttypeIdGet()
    {
    }

    /**
     * Test case for projectsProjectGet
     *
     * Fetches all projects.
     *
     */
    public function testProjectsProjectGet()
    {
    }

    /**
     * Test case for projectsProjectIdDelete
     *
     * Deletes the project with the given id.
     *
     */
    public function testProjectsProjectIdDelete()
    {
    }

    /**
     * Test case for projectsProjectIdGet
     *
     * Fetches a single project by id.
     *
     */
    public function testProjectsProjectIdGet()
    {
    }

    /**
     * Test case for projectsProjectIdPlanningBudgetGet
     *
     * Fetches the assignment budget info of a project.
     *
     */
    public function testProjectsProjectIdPlanningBudgetGet()
    {
    }

    /**
     * Test case for projectsProjectIdPut
     *
     * Updates a project for the given id.
     *
     */
    public function testProjectsProjectIdPut()
    {
    }

    /**
     * Test case for projectsProjectPost
     *
     * Add a new project.
     *
     */
    public function testProjectsProjectPost()
    {
    }

    /**
     * Test case for projectsProjectcustomfieldgroupsGet
     *
     * Fetches all custom field groups available for projects.
     *
     */
    public function testProjectsProjectcustomfieldgroupsGet()
    {
    }

    /**
     * Test case for projectsProjectcustomfieldgroupsIdGet
     *
     * Fetches a single custom field group available for project.
     *
     */
    public function testProjectsProjectcustomfieldgroupsIdGet()
    {
    }

    /**
     * Test case for projectsProjectcustomfieldsGet
     *
     * Fetches all custom fields available for projects.
     *
     */
    public function testProjectsProjectcustomfieldsGet()
    {
    }

    /**
     * Test case for projectsProjectcustomfieldsIdGet
     *
     * Fetches a single custom field available for projects.
     *
     */
    public function testProjectsProjectcustomfieldsIdGet()
    {
    }

    /**
     * Test case for projectsProjectemployeePost
     *
     * Add an employee to a project.
     *
     */
    public function testProjectsProjectemployeePost()
    {
    }

    /**
     * Test case for projectsProjectemployeeProjectEmployeeIdDelete
     *
     * Remove an employee from a project.
     *
     */
    public function testProjectsProjectemployeeProjectEmployeeIdDelete()
    {
    }

    /**
     * Test case for projectsProjectfiltersGet
     *
     * Fetches all filters available for projects.
     *
     */
    public function testProjectsProjectfiltersGet()
    {
    }

    /**
     * Test case for projectsProjectfiltersIdGet
     *
     * Fetches a single filter available for projects.
     *
     */
    public function testProjectsProjectfiltersIdGet()
    {
    }

    /**
     * Test case for projectsProjectstatusGet
     *
     * Fetches all projects statusses.
     *
     */
    public function testProjectsProjectstatusGet()
    {
    }

    /**
     * Test case for projectsProjectstatusIdGet
     *
     * Fetches a single projects status by id.
     *
     */
    public function testProjectsProjectstatusIdGet()
    {
    }

    /**
     * Test case for projectsPurchaseGet
     *
     * Fetches all project purchase records.
     *
     */
    public function testProjectsPurchaseGet()
    {
    }

    /**
     * Test case for projectsPurchaseIdGet
     *
     * Fetches a single project purchase record.
     *
     */
    public function testProjectsPurchaseIdGet()
    {
    }

    /**
     * Test case for projectsPurchasetypeGet
     *
     * Fetches all purchase types.
     *
     */
    public function testProjectsPurchasetypeGet()
    {
    }

    /**
     * Test case for projectsPurchasetypeIdGet
     *
     * Fetches a single purchase type by id.
     *
     */
    public function testProjectsPurchasetypeIdGet()
    {
    }

    /**
     * Test case for projectsReverseinvoiceGet
     *
     * Fetches all reverse invoice records.
     *
     */
    public function testProjectsReverseinvoiceGet()
    {
    }

    /**
     * Test case for projectsReverseinvoiceIdGet
     *
     * Fetches a single project reverse invoice.
     *
     */
    public function testProjectsReverseinvoiceIdGet()
    {
    }

    /**
     * Test case for projectsServiceGet
     *
     * Fetches all services.
     *
     */
    public function testProjectsServiceGet()
    {
    }

    /**
     * Test case for projectsServiceIdDelete
     *
     * Deletes the service with the given id.
     *
     */
    public function testProjectsServiceIdDelete()
    {
    }

    /**
     * Test case for projectsServiceIdDuplicatePost
     *
     * Duplicates a service on base of the id.
     *
     */
    public function testProjectsServiceIdDuplicatePost()
    {
    }

    /**
     * Test case for projectsServiceIdGet
     *
     * Fetches a single service by id.
     *
     */
    public function testProjectsServiceIdGet()
    {
    }

    /**
     * Test case for projectsServiceIdPlanningBudgetGet
     *
     * Fetches the assignment budget info of a project service.
     *
     */
    public function testProjectsServiceIdPlanningBudgetGet()
    {
    }

    /**
     * Test case for projectsServiceIdPut
     *
     * Updates a service for the given id.
     *
     */
    public function testProjectsServiceIdPut()
    {
    }

    /**
     * Test case for projectsServicePost
     *
     * Add a new service.
     *
     */
    public function testProjectsServicePost()
    {
    }
}
