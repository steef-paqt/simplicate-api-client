<?php
/**
 * HoursApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Simplicate API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * Contact: support@simplicate.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.43
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * HoursApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HoursApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for hoursAbsenceIdPut
     *
     * Updates an hour entity for absence for the given id.
     *
     */
    public function testHoursAbsenceIdPut()
    {
    }

    /**
     * Test case for hoursAbsencePost
     *
     * Add a new hours entity for absence.
     *
     */
    public function testHoursAbsencePost()
    {
    }

    /**
     * Test case for hoursApprovalGet
     *
     * Fetches the approval status of each day for each employee.
     *
     */
    public function testHoursApprovalGet()
    {
    }

    /**
     * Test case for hoursApprovalIdDelete
     *
     * Deletes the hours approval with the given approval id.
     *
     */
    public function testHoursApprovalIdDelete()
    {
    }

    /**
     * Test case for hoursApprovalIdGet
     *
     * Fetches a single approval status for a day for an employee.
     *
     */
    public function testHoursApprovalIdGet()
    {
    }

    /**
     * Test case for hoursApprovalIdPut
     *
     * Updates a hours approval for the given approval id.
     *
     */
    public function testHoursApprovalIdPut()
    {
    }

    /**
     * Test case for hoursApprovalPost
     *
     * Add a new hours approval.
     *
     */
    public function testHoursApprovalPost()
    {
    }

    /**
     * Test case for hoursApprovalstatusGet
     *
     * Fetches all hour types.
     *
     */
    public function testHoursApprovalstatusGet()
    {
    }

    /**
     * Test case for hoursApprovalstatusIdGet
     *
     * Fetches a single hour status by hour type id.
     *
     */
    public function testHoursApprovalstatusIdGet()
    {
    }

    /**
     * Test case for hoursEmployeeexpenseIdGet
     *
     * Fetches a single expense for an employee.
     *
     */
    public function testHoursEmployeeexpenseIdGet()
    {
    }

    /**
     * Test case for hoursEmployeeexpensesGet
     *
     * Fetches the expenses of employees.
     *
     */
    public function testHoursEmployeeexpensesGet()
    {
    }

    /**
     * Test case for hoursHoursGet
     *
     * Fetches all hours.
     *
     */
    public function testHoursHoursGet()
    {
    }

    /**
     * Test case for hoursHoursIdDelete
     *
     * Deletes the hours registration with the given hours id.
     *
     */
    public function testHoursHoursIdDelete()
    {
    }

    /**
     * Test case for hoursHoursIdGet
     *
     * Fetches a single hours by hours id.
     *
     */
    public function testHoursHoursIdGet()
    {
    }

    /**
     * Test case for hoursHoursIdPut
     *
     * Updates a hours registration for the given hours id.
     *
     */
    public function testHoursHoursIdPut()
    {
    }

    /**
     * Test case for hoursHoursPost
     *
     * Add a new hours registration.
     *
     */
    public function testHoursHoursPost()
    {
    }

    /**
     * Test case for hoursHourstypeGet
     *
     * Fetches all hour types.
     *
     */
    public function testHoursHourstypeGet()
    {
    }

    /**
     * Test case for hoursHourstypeIdGet
     *
     * Fetches a single hour type by hour type id.
     *
     */
    public function testHoursHourstypeIdGet()
    {
    }

    /**
     * Test case for hoursHourstypeIdPut
     *
     * Updates a hour type registration for the given hour type id.
     *
     */
    public function testHoursHourstypeIdPut()
    {
    }

    /**
     * Test case for hoursHourstypePost
     *
     * Add a new hour type.
     *
     */
    public function testHoursHourstypePost()
    {
    }

    /**
     * Test case for hoursLeaveIdPut
     *
     * Updates an hour entity for leave for the given id.
     *
     */
    public function testHoursLeaveIdPut()
    {
    }

    /**
     * Test case for hoursLeavePost
     *
     * Add a new hours entity for leave.
     *
     */
    public function testHoursLeavePost()
    {
    }

    /**
     * Test case for hoursSubmissionGet
     *
     * Fetches hours submission status, by date, for an employee.
     *
     */
    public function testHoursSubmissionGet()
    {
    }

    /**
     * Test case for hoursSubmissionPost
     *
     * Submit all the employee's hours between the start and end date..
     *
     */
    public function testHoursSubmissionPost()
    {
    }

    /**
     * Test case for hoursSubmitPost
     *
     * Submit hours for approval.
     *
     */
    public function testHoursSubmitPost()
    {
    }

    /**
     * Test case for hoursTimesheetrowGet
     *
     * Fetches timesheet rows, by date, for an employee.
     *
     */
    public function testHoursTimesheetrowGet()
    {
    }

    /**
     * Test case for hoursTimesheetrowIdDelete
     *
     * Deletes the timesheet row with the supplied timesheetrow id.
     *
     */
    public function testHoursTimesheetrowIdDelete()
    {
    }

    /**
     * Test case for hoursTimesheetrowMostrecentGet
     *
     * Find the most recent timesheet row.
     *
     */
    public function testHoursTimesheetrowMostrecentGet()
    {
    }

    /**
     * Test case for hoursTimesheetrowOrderPut
     *
     * Change order for timesheetrows..
     *
     */
    public function testHoursTimesheetrowOrderPut()
    {
    }

    /**
     * Test case for hoursTimesheetrowPost
     *
     * Submit a timesheet week row for the given employee..
     *
     */
    public function testHoursTimesheetrowPost()
    {
    }

    /**
     * Test case for timersTimerGet
     *
     * Fetches all timers.
     *
     */
    public function testTimersTimerGet()
    {
    }

    /**
     * Test case for timersTimerIdDelete
     *
     * Deletes the timer with the given timer id.
     *
     */
    public function testTimersTimerIdDelete()
    {
    }

    /**
     * Test case for timersTimerIdGet
     *
     * Fetches a single timer by its id.
     *
     */
    public function testTimersTimerIdGet()
    {
    }

    /**
     * Test case for timersTimerIdPut
     *
     * Updates a timer for the given timer id.
     *
     */
    public function testTimersTimerIdPut()
    {
    }

    /**
     * Test case for timersTimerPost
     *
     * Add a new timer.
     *
     */
    public function testTimersTimerPost()
    {
    }
}
